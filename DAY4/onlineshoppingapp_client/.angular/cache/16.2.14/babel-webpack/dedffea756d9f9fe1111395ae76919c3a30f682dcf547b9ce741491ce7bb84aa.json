{"ast":null,"code":"import { ProductModel } from \"../models/product.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(httpCLientObj) {\n    this.httpCLientObj = httpCLientObj;\n    this.listofproducts = [];\n    this.theProduct = new ProductModel();\n  }\n  getAllProducts() {\n    return new Promise((resolve, reject) => {\n      // make AJAX request here !\n      this.httpCLientObj.get(\"http://localhost:3000/products\").subscribe(products => {\n        this.listofproducts = resolve(products);\n      });\n    });\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac\n  });\n}","map":{"version":3,"names":["ProductModel","ProductService","constructor","httpCLientObj","listofproducts","theProduct","getAllProducts","Promise","resolve","reject","get","subscribe","products","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac"],"sources":["/Users/achilles/Documents/Trainings/2024/July/IDEAS_PUNE_July_24/Demos/ANG_IDEAS_July_24/DAY4/onlineshoppingapp_client/src/app/services/products.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { ProductModel } from \"../models/product.model\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class ProductService {\n  listofproducts: ProductModel[] = [];\n  theProduct: ProductModel = new ProductModel();\n  constructor(public httpCLientObj: HttpClient) {}\n  getAllProducts(): Promise<ProductModel[]> {\n    return new Promise((resolve, reject) => {\n      // make AJAX request here !\n      this.httpCLientObj\n        .get<ProductModel[]>(\"http://localhost:3000/products\")\n        .subscribe((products: ProductModel[]) => {\n          this.listofproducts = \n          resolve(products);\n        });\n    });\n  }\n\n  // getProductById(id: number) {\n  //   return new Promise((resolve, reject) => {\n  //     // make AJAX request here !\n  //     this.httpCLientObj\n  //       .get<ProductModel[]>(\"http://localhost:3000/products/\" + id)\n  //       .subscribe((product: ProductModel) => resolve(this.theProduct));\n  //   });\n  // }\n\n  // OR\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,yBAAyB;;;AAItD,OAAM,MAAOC,cAAc;EAGzBC,YAAmBC,aAAyB;IAAzB,KAAAA,aAAa,GAAbA,aAAa;IAFhC,KAAAC,cAAc,GAAmB,EAAE;IACnC,KAAAC,UAAU,GAAiB,IAAIL,YAAY,EAAE;EACE;EAC/CM,cAAcA,CAAA;IACZ,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC;MACA,IAAI,CAACN,aAAa,CACfO,GAAG,CAAiB,gCAAgC,CAAC,CACrDC,SAAS,CAAEC,QAAwB,IAAI;QACtC,IAAI,CAACR,cAAc,GACnBI,OAAO,CAACI,QAAQ,CAAC;MACnB,CAAC,CAAC;IACN,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAdUZ,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}